apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: welcome-config-secrets
  namespace: jenkins
stringData:
  EXECUTORS_AMOUNT: "6"
  SYSTEM_MESSAGE: "Welcome to EOSC-Synergy Jenkins!"


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: operator-github-configmap
data:
  1-configure-executors.groovy: |
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*
    Jenkins jenkins = Jenkins.getInstance()
    jenkins.setNumExecutors(Integer.valueOf(secrets["EXECUTORS_AMOUNT"]))
    jenkins.save()
  2-configure-theme.groovy: |
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*
    import org.jenkinsci.plugins.simpletheme.ThemeElement
    import org.jenkinsci.plugins.simpletheme.CssTextThemeElement
    import org.jenkinsci.plugins.simpletheme.CssUrlThemeElement

    Jenkins jenkins = Jenkins.getInstance()

    def decorator = Jenkins.instance.getDescriptorByType(org.codefirst.SimpleThemeDecorator.class)

    List<ThemeElement> configElements = new ArrayList<>();
    configElements.add(new CssTextThemeElement("DEFAULT"));
    configElements.add(new CssUrlThemeElement("https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-light-green.css"));
    decorator.setElements(configElements);
    decorator.save();

    jenkins.save()
  3-system-message.yaml: |
    jenkins:
      systemMessage: ${SYSTEM_MESSAGE}
  
  4-configure-github.yaml: |
    jenkins:
      securityRealm:
        github:
          githubWebUri: "https://github.com"
          githubApiUri: "https://api.github.com"
          clientID: "d1f89c833d2a9141e762"
          clientSecret: ${GITHUB_OAUTH_TOKEN}
          oauthScopes: "read:org,user:email"
    credentials:
      system:
        domainCredentials:
          - credentials:
              - usernamePassword:
                  scope: GLOBAL
                  id: "github-token"
                  username: "jenkinsOperator"
                  password: ${GITHUB_ACC_TOKEN}
                  description: "Github organization token for jenkinsOperator"    
    unclassified:
      githubpluginconfig:
        configs:
          - name: "jenkins on k8s"
            apiUrl: "https://api.github.com"
            credentialsId: "github-token"
            manageHooks: true

  5-configure-github-authorization.yaml: |
    jenkins:
      authorizationStrategy:
        globalMatrix:
          permissions:
            - "Overall/Read:authenticated"
            - "Overall/Administer:jenkins-operator"
            - "Overall/Administer:Sgb597"
            - "Overall/Administer:admin"
            - "Overall/Read:authenticated"

  6-jenkins-agent.yaml: |
    jenkins:
      clouds:
        - kubernetes:
            name: "kubernetes"
            serverUrl: "https://kubernetes.default.svc.cluster.local:443"
            skipTlsVerify: true
            namespace: "jenkins"
            jenkinsUrl: "http://jenkins-operator-http-vanilla.jenkins.svc.cluster.local:8080"
            jenkinsTunnel: "http://jenkins-operator-http-vanilla.jenkins.svc.cluster.local:8080"
            templates:
              - name: "k8s-agent"
                namespace: "jenkins"
                label: "linux-x86_64"
                nodeUsageMode: EXCLUSIVE
                containers:
                  - name: "jnlp"
                    image: "jenkins/inbound-agent:latest"
                    alwaysPullImage: true
                    workingDir: "/home/jenkins"
                    ttyEnabled: true
                    resourceRequestCpu: "500m"
                    resourceLimitCpu: "1000m"
                    resourceRequestMemory: "1Gi"
                    resourceLimitMemory: "2Gi"
                volumes:
                  - emptyDirVolume:
                    memory: false
                    mountPath: "/tmp"
